#!/bin/bash

# Path to root of CM project directory
CM_PROJECT_DIR=~/android/system/cm-14.1
CM_DEVICE=~/android/system/cm-14.1/device/samsung/gts210vewifi
CM_DEV_T713=~/android/system/cm-14.1/device/samsung/gts28vewifi
CM_KERNEL=~/android/system/cm-14.1/kernel/samsung/msm8976
CM_VENDOR=~/android/system/cm-14.1/vendor/samsung
CM_VENDOR_CM=~/android/system/cm-14.1/vendor/cm
CM_COMMON=~/android/system/cm-14.1/device/samsung/msm8976-common
CM_HARDWARE=~/android/system/cm-14.1/hardware/samsung
CM_SETTINGS=~/android/system/cm-14.1/packages/apps/Settings
CM_FRAME_AV=~/android/system/cm-14.1/frameworks/av

CM_ANDROID=~/android/system/cm-14.1/android
CM_QCOM_SE=~/android/system/cm-14.1/device/qcom/sepolicy
CM_BORING=~/android/system/cm-14.1/external/boringssl
CM_IPTABLE=~/android/system/cm-14.1/external/iptables
CM_ZIP=~/android/system/cm-14.1/external/p7zip
CM_PPP=~/android/system/cm-14.1/external/ppp
CM_SQL=~/android/system/cm-14.1/external/sqlite
CM_BASE=~/android/system/cm-14.1/frameworks/base
CM_NATIVE=~/android/system/cm-14.1/frameworks/native
CM_WIFI=~/android/system/cm-14.1/frameworks/opt/net/wifi
CM_AUDIO=~/android/system/cm-14.1/hardware/qcom/audio-caf/msm8952
CM_DISPLAY=~/android/system/cm-14.1/hardware/qcom/display-caf/msm8952
CM_MEDIA=~/android/system/cm-14.1/hardware/qcom/media-caf/msm8952
CM_FX=~/android/system/cm-14.1/packages/apps/AudioFX
CM_CLOCK=~/android/system/cm-14.1/packages/apps/DeskClock
CM_JELLY=~/android/system/cm-14.1/packages/apps/Jelly
CM_IME=~/android/system/cm-14.1/packages/inputmethods/LatinIME
CM_BT=~/android/system/cm-14.1/system/bt
CM_NETD=~/android/system/cm-14.1/system/netd
CM_SYS_SE=~/android/system/cm-14.1/system/sepolicy
CM_VOLD=~/android/system/cm-14.1/system/vold
CM_QCOM=~/android/system/cm-14.1/device/qcom/common
CM_HEVC=~/android/system/cm-14.1/external/libhevc

## End Edit

cd "$CM_PROJECT_DIR"

if [ -e "../../patches/build.name.cm14.diff" ]; then
  patch -R -p1 --no-backup-if-mismatch < ../../patches/build.name.cm14.diff
fi

repo sync --no-clone-bundle

if [ -e "../../patches/build.name.cm14.diff" ]; then
  echo "Setting build name to NIGHTLY"
  patch -p1 --no-backup-if-mismatch < ../../patches/build.name.cm14.diff
fi

echo ""

if [ -d "$CM_DEVICE" ]; then
  cd "$CM_DEVICE"
  echo "Rebasing device_samsung_gts210vewifi repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch cyanogen
  git rebase cyanogen/cm-14.1
  echo ""
fi

if [ -d "$CM_DEV_T713" ]; then
  cd "$CM_DEV_T713"
  echo "Rebasing device_samsung_gts28vewifi repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch cyanogen
  git rebase cyanogen/cm-14.1
  echo ""
fi

if [ -d "$CM_COMMON" ]; then
  cd "$CM_COMMON"
  echo "Rebasing device_samsung_msm8976-common repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch cyanogen
  git rebase cyanogen/cm-14.1
  echo ""
fi

if [ -d "$CM_HARDWARE" ]; then
  cd "$CM_HARDWARE"
  echo "Rebasing hardware_samsung repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch cyanogen
  git rebase cyanogen/cm-14.1
  echo ""
fi

if [ -d "$CM_KERNEL" ]; then
  cd "$CM_KERNEL"
  echo "Rebasing kernel_samsung_msm8976 repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch cyanogen
  git rebase cyanogen/cm-14.1
  echo ""
fi

if [ -d "$CM_VENDOR" ]; then
  cd "$CM_VENDOR"
  echo "Rebasing vendor_samsung repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch cyanogen
  git rebase cyanogen/cm-14.1
  echo ""
fi

if [ -d "$CM_ANDROID" ]; then
  cd "$CM_ANDROID"
  echo "Rebasing android repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch lineage
  git rebase lineage/cm-14.1
  echo ""
fi

if [ -d "$CM_QCOM_SE" ]; then
  cd "$CM_QCOM_SE"
  echo "Rebasing qcom sepolicy repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch lineage
  git rebase lineage/cm-14.1
  echo ""
fi

if [ -d "$CM_BORING" ]; then
  cd "$CM_BORING"
  echo "Rebasing boringssl repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch lineage
  git rebase lineage/cm-14.1
  echo ""
fi

if [ -d "$CM_IPTABLE" ]; then
  cd "$CM_IPTABLE"
  echo "Rebasing iptables repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch lineage
  git rebase lineage/cm-14.1
  echo ""
fi

if [ -d "$CM_ZIP" ]; then
  cd "$CM_ZIP"
  echo "Rebasing p7zip repo."
  git show-ref --verify --quiet refs/heads/lineage-17.1
  if [ "$?" == 1 ]; then
    git checkout -b lineage-17.1 ghub/lineage-17.1
  else
    git checkout lineage-17.1
  fi
  git fetch lineage
  git rebase lineage/lineage-17.1
  echo ""
fi

if [ -d "$CM_PPP" ]; then
  cd "$CM_PPP"
  echo "Rebasing ppp repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch lineage
  git rebase lineage/cm-14.1
  echo ""
fi

if [ -d "$CM_SQL" ]; then
  cd "$CM_SQL"
  echo "Rebasing sqlite repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch lineage
  git rebase lineage/cm-14.1
  echo ""
fi

if [ -d "$CM_FRAME_AV" ]; then
  cd "$CM_FRAME_AV"
  echo "Rebasing frameworks/av repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch lineage
  git rebase lineage/cm-14.1
  echo ""
fi

if [ -d "$CM_BASE" ]; then
  cd "$CM_BASE"
  echo "Rebasing frameworks/base repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch lineage
  git rebase lineage/cm-14.1
  echo ""
fi

if [ -d "$CM_NATIVE" ]; then
  cd "$CM_NATIVE"
  echo "Rebasing frameworks/native repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch lineage
  git rebase lineage/cm-14.1
  echo ""
fi

if [ -d "$CM_VENDOR_CM" ]; then
  cd "$CM_VENDOR_CM"
  echo "Rebasing vendor/cm repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch lineage
  git rebase lineage/cm-14.1
  echo ""
fi

if [ -d "$CM_SETTINGS" ]; then
  cd "$CM_SETTINGS"
  echo "Rebasing settings repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch lineage
  git rebase lineage/cm-14.1
  echo ""
fi

if [ -d "$CM_WIFI" ]; then
  cd "$CM_WIFI"
  echo "Rebasing frameworks/opt/net/wifi repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch lineage
  git rebase lineage/cm-14.1
  echo ""
fi

if [ -d "$CM_AUDIO" ]; then
  cd "$CM_AUDIO"
  echo "Rebasing audio-caf repo."
  git show-ref --verify --quiet refs/heads/cm-14.1-caf-8952
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1-caf-8952 ghub/cm-14.1-caf-8952
  else
    git checkout cm-14.1-caf-8952
  fi
  git fetch lineage
  git rebase lineage/cm-14.1-caf-8952
  echo ""
fi

if [ -d "$CM_DISPLAY" ]; then
  cd "$CM_DISPLAY"
  echo "Rebasing display-caf repo."
  git show-ref --verify --quiet refs/heads/cm-14.1-caf-8952
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1-caf-8952 ghub/cm-14.1-caf-8952
  else
    git checkout cm-14.1-caf-8952
  fi
  git fetch lineage
  git rebase lineage/cm-14.1-caf-8952
  echo ""
fi

if [ -d "$CM_MEDIA" ]; then
  cd "$CM_MEDIA"
  echo "Rebasing media-caf repo."
  git show-ref --verify --quiet refs/heads/cm-14.1-caf-8952
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1-caf-8952 ghub/cm-14.1-caf-8952
  else
    git checkout cm-14.1-caf-8952
  fi
  git fetch lineage
  git rebase lineage/cm-14.1-caf-8952
  echo ""
fi

if [ -d "$CM_FX" ]; then
  cd "$CM_FX"
  echo "Rebasing AudioFX repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch lineage
  git rebase lineage/cm-14.1
  echo ""
fi

if [ -d "$CM_CLOCK" ]; then
  cd "$CM_CLOCK"
  echo "Rebasing DeskClock repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch lineage
  git rebase lineage/cm-14.1
  echo ""
fi

if [ -d "$CM_JELLY" ]; then
  cd "$CM_JELLY"
  echo "Rebasing Jelly repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch lineage
  git rebase lineage/cm-14.1
  echo ""
fi

if [ -d "$CM_IME" ]; then
  cd "$CM_IME"
  echo "Rebasing LatinIME repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch lineage
  git rebase lineage/cm-14.1
  echo ""
fi

if [ -d "$CM_BT" ]; then
  cd "$CM_BT"
  echo "Rebasing system/bt repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch lineage
  git rebase lineage/cm-14.1
  echo ""
fi

if [ -d "$CM_NETD" ]; then
  cd "$CM_NETD"
  echo "Rebasing netd repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch lineage
  git rebase lineage/cm-14.1
  echo ""
fi

if [ -d "$CM_SYS_SE" ]; then
  cd "$CM_SYS_SE"
  echo "Rebasing system/sepolicy repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch lineage
  git rebase lineage/cm-14.1
  echo ""
fi

if [ -d "$CM_VOLD" ]; then
  cd "$CM_VOLD"
  echo "Rebasing vold repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch lineage
  git rebase lineage/cm-14.1
  echo ""
fi

if [ -d "$CM_QCOM" ]; then
  cd "$CM_QCOM"
  echo "Rebasing qcom/common repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch lineage
  git rebase lineage/cm-14.1
  echo ""
fi

if [ -d "$CM_HEVC" ]; then
  cd "$CM_HEVC"
  echo "Rebasing external/libhevc repo."
  git show-ref --verify --quiet refs/heads/cm-14.1
  if [ "$?" == 1 ]; then
    git checkout -b cm-14.1 ghub/cm-14.1
  else
    git checkout cm-14.1
  fi
  git fetch lineage
  git rebase lineage/cm-14.1
  echo ""
fi
